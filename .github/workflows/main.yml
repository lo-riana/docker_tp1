name: CI devops 2025
on:
  #to begin you want to launch this job in main and develop
  push:
    branches: 
    - main
    - develop  #se déclanche sur les branches main et develop
  pull_request: # et aussi sur tous les pull request

jobs:
  test-backend: 
    runs-on: ubuntu-24.04
    steps:
     #checkout your github code using actions/checkout@v4
      - uses: actions/checkout@v5

     #do the same with another action (actions/setup-java@v4) that enable to setup jdk 21
      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'temurin'

     #finally build your app with the latest command
      - name: Build and test with Maven
        run: mvn clean verify --file ./simpleapi/pom.xml

  sonar-analysis:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5

      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: SonarCloud analysis
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=lo-riana_docker_tp1 -Dsonar.organization=lo-riana -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}  --file ./simpleapi/pom.xml
    needs: test-backend



  # define job to build and publish docker image
  build-and-push-docker-image:
    needs: 
    - test-backend
    - sonar-analysis
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-24.04

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin


      - name: Build image and push backend
        uses: docker/build-push-action@v6
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./simpleapi
          # Note: tags has to be all lower-case
          tags:  ${{secrets.DOCKERHUB_USERNAME}}/tp-devops-simple-api:latest
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Build image and push database
        uses: docker/build-push-action@v6
        with:
          context: ./initdb
          tags:  ${{secrets.DOCKERHUB_USERNAME}}/tp-devops-database:latest
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Build image and push httpd
        uses: docker/build-push-action@v6
        with:
          context: ./httpd-server
          tags:  ${{secrets.DOCKERHUB_USERNAME}}/tp-devops-httpd:latest
          push: ${{ github.ref == 'refs/heads/main' }}

  deploy-production:
    needs: build-and-push-docker-image
    runs-on: ubuntu-latest
    # Seulement sur la branche main et après un push (pas sur les pr)
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install Ansible
        run: pip install ansible
        
      - name: Deploy with Ansible
        env:
          ANSIBLE_HOST_KEY_CHECKING: False
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa
          
          cd ansible
          
          echo "---" > env_var.yml
          echo "POSTGRES_DB: \"$POSTGRES_DB\"" >> env_var.yml
          echo "POSTGRES_USER: \"$POSTGRES_USER\"" >> env_var.yml
          echo "POSTGRES_PASSWORD: \"$POSTGRES_PASSWORD\"" >> env_var.yml
          echo "POSTGRES_HOST: \"database\"" >> env_var.yml
          
          ansible-playbook -i inventories/setup.yml playbook.yml